{"ast":null,"code":"var _jsxFileName = \"/Volumes/Learning/Learning/Web-Development/projects/Assignment-11/client/src/components/Dashboard/AddService/PaymentForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PaymentForm = ({\n  userBookingData\n}) => {\n  _s();\n\n  const [userPaymentData, setUserPaymentData] = useState({});\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (!stripe || !elements) {\n      return;\n    }\n\n    const cardElement = elements.getElement(CardElement);\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: \"card\",\n      card: cardElement\n    });\n\n    if (error) {\n      console.log(\"[error]\", error);\n    } else {\n      console.log(paymentMethod.id);\n      const paymentWithUser = { ...userBookingData,\n        paymentId: paymentMethod.id\n      };\n      setUserPaymentData(paymentWithUser);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mt-5\",\n        type: \"submit\",\n        disabled: !stripe,\n        children: \"Pay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PaymentForm, \"Tn1vRY8xGLs7UIKO3kY2AjMfGwc=\", false, function () {\n  return [useStripe, useElements];\n});\n\n_c = PaymentForm;\nexport default PaymentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentForm\");","map":{"version":3,"sources":["/Volumes/Learning/Learning/Web-Development/projects/Assignment-11/client/src/components/Dashboard/AddService/PaymentForm.js"],"names":["React","useState","CardElement","useStripe","useElements","PaymentForm","userBookingData","userPaymentData","setUserPaymentData","stripe","elements","handleSubmit","event","preventDefault","cardElement","getElement","error","paymentMethod","createPaymentMethod","type","card","console","log","id","paymentWithUser","paymentId"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,WAAjC,QAAoD,yBAApD;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAuB;AAAA;;AACzC,QAAM,CAACC,eAAD,EAAiBC,kBAAjB,IAAqCP,QAAQ,CAAC,EAAD,CAAnD;AACA,QAAMQ,MAAM,GAAGN,SAAS,EAAxB;AACA,QAAMO,QAAQ,GAAGN,WAAW,EAA5B;;AAEA,QAAMO,YAAY,GAAG,MAAOC,KAAP,IAAiB;AACpCA,IAAAA,KAAK,CAACC,cAAN;;AAEA,QAAI,CAACJ,MAAD,IAAW,CAACC,QAAhB,EAA0B;AACxB;AACD;;AACD,UAAMI,WAAW,GAAGJ,QAAQ,CAACK,UAAT,CAAoBb,WAApB,CAApB;AACA,UAAM;AAAEc,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAA2B,MAAMR,MAAM,CAACS,mBAAP,CAA2B;AAChEC,MAAAA,IAAI,EAAE,MAD0D;AAEhEC,MAAAA,IAAI,EAAEN;AAF0D,KAA3B,CAAvC;;AAKA,QAAIE,KAAJ,EAAW;AACTK,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBN,KAAvB;AACD,KAFD,MAEO;AACLK,MAAAA,OAAO,CAACC,GAAR,CAAYL,aAAa,CAACM,EAA1B;AACA,YAAMC,eAAe,GAAC,EAAC,GAAGlB,eAAJ;AAAoBmB,QAAAA,SAAS,EAAER,aAAa,CAACM;AAA7C,OAAtB;AACAf,MAAAA,kBAAkB,CAACgB,eAAD,CAAlB;AACD;AACF,GAnBD;;AAoBA,sBACE;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAEb,YAAhB;AAAA,8BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,SAAS,EAAC,sBAAlB;AAAyC,QAAA,IAAI,EAAC,QAA9C;AAAuD,QAAA,QAAQ,EAAE,CAACF,MAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAnCD;;GAAMJ,W;UAEWF,S,EACEC,W;;;KAHbC,W;AAqCN,eAAeA,WAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\n\nconst PaymentForm = ({userBookingData}) => {\n  const [userPaymentData,setUserPaymentData]=useState({})\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    if (!stripe || !elements) {\n      return;\n    }\n    const cardElement = elements.getElement(CardElement);\n    const { error, paymentMethod } = await stripe.createPaymentMethod({\n      type: \"card\",\n      card: cardElement,\n    });\n\n    if (error) {\n      console.log(\"[error]\", error);\n    } else {\n      console.log(paymentMethod.id);\n      const paymentWithUser={...userBookingData,paymentId: paymentMethod.id };\n      setUserPaymentData(paymentWithUser)\n    }\n  };\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <CardElement />\n        <button className=\"btn btn-primary mt-5\" type=\"submit\" disabled={!stripe}>\n          Pay\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default PaymentForm;\n"]},"metadata":{},"sourceType":"module"}