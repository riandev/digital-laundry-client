{"ast":null,"code":"var _jsxFileName = \"/Volumes/Learning/Learning/Web-Development/projects/Assignment-11/client/src/components/Dashboard/Dashboard/Dashboard.js\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport './Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst routes = [{\n  path: \"/\",\n  exact: true,\n  sidebar: () => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"home!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 20\n  }, this),\n  main: () => /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Home\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 17\n  }, this)\n}, {\n  path: \"/bubblegum\",\n  sidebar: () => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"bubblegum!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 20\n  }, this),\n  main: () => /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Bubblegum\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 17\n  }, this)\n}, {\n  path: \"/shoelaces\",\n  sidebar: () => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"shoelaces!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 20\n  }, this),\n  main: () => /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Shoelaces\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 17\n  }, this)\n}];\n\nconst Dashboard = () => {\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar d-flex flex-column justify-content-between py-5 px-4\",\n        style: {\n          height: \"100vh\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-unstyled\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/\",\n              children: \"Home\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/bubblegum\",\n              children: \"Bubblegum\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/shoelaces\",\n              children: \"Shoelaces\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          children: routes.map((route, index) =>\n          /*#__PURE__*/\n          // You can render a <Route> in as many places\n          // as you want in your app. It will render along\n          // with any other <Route>s that also match the URL.\n          // So, a sidebar or breadcrumbs or anything else\n          // that requires you to render multiple things\n          // in multiple places at the same URL is nothing\n          // more than multiple <Route>s.\n          _jsxDEV(Route, {\n            path: route.path,\n            exact: route.exact,\n            children: /*#__PURE__*/_jsxDEV(route.sidebar, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 27\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1,\n          padding: \"10px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          children: routes.map((route, index) =>\n          /*#__PURE__*/\n          // Render more <Route>s with the same paths as\n          // above, but different components this time.\n          _jsxDEV(Route, {\n            path: route.path,\n            exact: route.exact,\n            children: /*#__PURE__*/_jsxDEV(route.main, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 27\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Volumes/Learning/Learning/Web-Development/projects/Assignment-11/client/src/components/Dashboard/Dashboard/Dashboard.js"],"names":["React","BrowserRouter","Router","Switch","Route","Link","routes","path","exact","sidebar","main","Dashboard","display","height","map","route","index","flex","padding"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport './Dashboard.css'\n\nconst routes = [\n  {\n    path: \"/\",\n    exact: true,\n    sidebar: () => <div>home!</div>,\n    main: () => <h2>Home</h2>,\n  },\n  {\n    path: \"/bubblegum\",\n    sidebar: () => <div>bubblegum!</div>,\n    main: () => <h2>Bubblegum</h2>,\n  },\n  {\n    path: \"/shoelaces\",\n    sidebar: () => <div>shoelaces!</div>,\n    main: () => <h2>Shoelaces</h2>,\n  },\n];\n\nconst Dashboard = () => {\n  return (\n    <Router>\n      <div style={{ display: \"flex\" }}>\n        <div\n          className=\"sidebar d-flex flex-column justify-content-between py-5 px-4\"\n        style={{ height: \"100vh\" }}\n        >\n          <ul className=\"list-unstyled\">\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n              <Link to=\"/bubblegum\">Bubblegum</Link>\n            </li>\n            <li>\n              <Link to=\"/shoelaces\">Shoelaces</Link>\n            </li>\n          </ul>\n\n          <Switch>\n            {routes.map((route, index) => (\n              // You can render a <Route> in as many places\n              // as you want in your app. It will render along\n              // with any other <Route>s that also match the URL.\n              // So, a sidebar or breadcrumbs or anything else\n              // that requires you to render multiple things\n              // in multiple places at the same URL is nothing\n              // more than multiple <Route>s.\n              <Route\n                key={index}\n                path={route.path}\n                exact={route.exact}\n                children={<route.sidebar />}\n              />\n            ))}\n          </Switch>\n        </div>\n\n        <div style={{ flex: 1, padding: \"10px\" }}>\n          <Switch>\n            {routes.map((route, index) => (\n              // Render more <Route>s with the same paths as\n              // above, but different components this time.\n              <Route\n                key={index}\n                path={route.path}\n                exact={route.exact}\n                children={<route.main />}\n              />\n            ))}\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}