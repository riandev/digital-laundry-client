{"ast":null,"code":"var _jsxFileName = \"/Volumes/Learning/Learning/Web-Development/projects/Assignment-11/client/src/components/Dashboard/AddService/PaymentForm.js\";\nimport React from \"react\";\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PaymentForm = () => {\n  // const stripe = useStripe();\n  // const elements = useElements();\n  // const handleSubmit = async (event) => {\n  //   // Block native form submission.\n  //   event.preventDefault();\n  //   if (!stripe || !elements) {\n  //     // Stripe.js has not loaded yet. Make sure to disable\n  //     // form submission until Stripe.js has loaded.\n  //     return;\n  //   }\n  //   // Get a reference to a mounted CardElement. Elements knows how\n  //   // to find your CardElement because there can only ever be one of\n  //   // each type of element.\n  //   const cardElement = elements.getElement(CardElement);\n  //   // Use your card Element with other Stripe.js APIs\n  //   const { error, paymentMethod } = await stripe.createPaymentMethod({\n  //     type: \"card\",\n  //     card: cardElement,\n  //   });\n  //   if (error) {\n  //     console.log(\"[error]\", error);\n  //   } else {\n  //     console.log(\"[PaymentMethod]\", paymentMethod);\n  //   }\n  // };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Pay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_c = PaymentForm;\nexport default PaymentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentForm\");","map":{"version":3,"sources":["/Volumes/Learning/Learning/Web-Development/projects/Assignment-11/client/src/components/Dashboard/AddService/PaymentForm.js"],"names":["React","CardElement","useStripe","useElements","PaymentForm"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,WAAjC,QAAoD,yBAApD;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AACxB;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sBACE;AAAA,2BACE;AAAA,8BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAzCD;;KAAMA,W;AA2CN,eAAeA,WAAf","sourcesContent":["import React from \"react\";\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\n\nconst PaymentForm = () => {\n  // const stripe = useStripe();\n  // const elements = useElements();\n\n  // const handleSubmit = async (event) => {\n  //   // Block native form submission.\n  //   event.preventDefault();\n\n  //   if (!stripe || !elements) {\n  //     // Stripe.js has not loaded yet. Make sure to disable\n  //     // form submission until Stripe.js has loaded.\n  //     return;\n  //   }\n\n  //   // Get a reference to a mounted CardElement. Elements knows how\n  //   // to find your CardElement because there can only ever be one of\n  //   // each type of element.\n  //   const cardElement = elements.getElement(CardElement);\n\n  //   // Use your card Element with other Stripe.js APIs\n  //   const { error, paymentMethod } = await stripe.createPaymentMethod({\n  //     type: \"card\",\n  //     card: cardElement,\n  //   });\n\n  //   if (error) {\n  //     console.log(\"[error]\", error);\n  //   } else {\n  //     console.log(\"[PaymentMethod]\", paymentMethod);\n  //   }\n  // };\n  return (\n    <div>\n      <form >\n        <CardElement />\n        <button type=\"submit\" >\n          Pay\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default PaymentForm;\n"]},"metadata":{},"sourceType":"module"}